# !Sub 'arn:aws:ec2:${AWS::Region}:${AWS::AccountId}:vpc/${vpc}'

AWSTemplateFormatVersion: "2010-09-09"
Description: Alexa Proactive Events API Feature Demo
Transform: AWS::Serverless-2016-10-31
Parameters:
  ProjectName:
    Type: String
    Default: "PingMe"
Metadata:
  Name: alexa-ping-me
Resources:
  askLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "ask-custom-${ProjectName}"
      CodeUri: s3://androula-host-us-east-1/code-packages/proactive-events-skill.zip
      Description: Alexa Skill Lambda function
      Handler: index.handler
      MemorySize: 128
      Runtime: nodejs12.x
      Timeout: 7
      Events:
        AlexaTrigger:
          Type: AlexaSkill
      Environment:
        Variables:
          DYNAMODB_TABLE: !Sub "ask${ProjectName}"
      Policies:
        - Version: "2012-10-17"
          Statement:
            - Effect: "Allow"
              Action:
                - "dynamodb:GetItem"
                - "dynamodb:PutItem"
                - "dynamodb:UpdateItem"
                - "dynamodb:DeleteItem"
              Resource:
                - !Sub "arn:aws:dynamodb:*:*:table/ask${ProjectName}"

  DatabaseTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: !Sub "ask${ProjectName}"
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 5
        WriteCapacityUnits: 5

Outputs:
  AlexaSkillFunctionARN:
    Value: !GetAtt askLambdaFunction.Arn
    Description: "Paste this Lambda ARN into your skill.json file!"
  DynamoDbTable:
    Value: !Sub "ask${ProjectName}"
